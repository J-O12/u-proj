
name: Frontend Deployment workflow

on:
  # workflow_dispatch:
  push:
    branches:
      - main

jobs:
  # lint-and-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: latest

  #     - name: Install Dependencies
  #       working-directory: ./frontend
  #       run: npm ci

  #     - name: Run Lint
  #       run: npm run lint .

  #     - name: Handle Lint Errors
  #       if: failure()  # Run only if lint failss
  #       run: npm lint --fix .

  #     - name: Run tests
  #       run: npm test

  #     - name: Handle Test Errors
  #       if: failure()  # Run only if tests fail
  #       run: echo "Tests failed. Please check and fix the issues."

  # build:
  #   runs-on: ubuntu-latest
  #    # needs: [lint-and-test]
  #   outputs:
  #     image_version: ${{ steps.docker_image.outputs.image }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: latest

  #     - name: Install Dependencies
  #       working-directory: ./frontend
  #       run: npm ci

  #     - id: docker_image
  #       working-directory: ./frontend
  #       run: |
  #         docker build -t frontend:${{ github.sha }} .
  #         echo "image=frontend:${{ github.sha }}" >> "$GITHUB_OUTPUT" 
      
  deploy-to-infra:
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      # - uses: actions/checkout@v1
      # - name: Install Terraform
      #   uses: little-core-labs/install-terraform@v2.0.0
      #   with:
      #       version: 1.6.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}


      # - name: Terraform apply
      #   run: |
      #     cd setup/terraform
      #     terraform init
      #     terraform apply -auto-approve
      # - env:
      #     BUILT_IMAGE: ${{needs.build.outputs.image_version}}
      #   run: echo "$BUILT_IMAGE"

      - name: Push to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker build -t frontend:${{ github.sha }} .
          docker tag frontend:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest
          docker push -a ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest